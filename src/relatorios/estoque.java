/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package relatorios;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import persistencia.conexao;

/**
 *
 * @author Igor
 */
public class estoque extends javax.swing.JFrame {

    String proNome, proCod;

    /**
     * Creates new form estoque
     */
    public estoque() {
        initComponents();
        campoPesquisa.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaEstoque = new javax.swing.JTable();
        tipoPesquisa = new javax.swing.JComboBox<>();
        campoPesquisa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        botaoAcertar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estoque:");

        tabelaEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Produto:", "Nome Produto:", "Quantidade:", "Quantidade a Mais:", "Nova Quantidade:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaEstoqueKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaEstoque);
        if (tabelaEstoque.getColumnModel().getColumnCount() > 0) {
            tabelaEstoque.getColumnModel().getColumn(0).setMinWidth(60);
            tabelaEstoque.getColumnModel().getColumn(0).setPreferredWidth(60);
            tabelaEstoque.getColumnModel().getColumn(0).setMaxWidth(60);
            tabelaEstoque.getColumnModel().getColumn(1).setMinWidth(435);
            tabelaEstoque.getColumnModel().getColumn(1).setPreferredWidth(100);
            tabelaEstoque.getColumnModel().getColumn(1).setMaxWidth(435);
            tabelaEstoque.getColumnModel().getColumn(2).setMinWidth(190);
            tabelaEstoque.getColumnModel().getColumn(2).setPreferredWidth(190);
            tabelaEstoque.getColumnModel().getColumn(2).setMaxWidth(190);
            tabelaEstoque.getColumnModel().getColumn(3).setMinWidth(190);
            tabelaEstoque.getColumnModel().getColumn(3).setPreferredWidth(190);
            tabelaEstoque.getColumnModel().getColumn(3).setMaxWidth(190);
            tabelaEstoque.getColumnModel().getColumn(4).setMinWidth(190);
            tabelaEstoque.getColumnModel().getColumn(4).setPreferredWidth(190);
            tabelaEstoque.getColumnModel().getColumn(4).setMaxWidth(190);
        }

        tipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "CÃ³digo" }));

        campoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisaActionPerformed(evt);
            }
        });

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botaoAcertar.setText("Acertar");
        botaoAcertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAcertarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(campoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoAcertar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoAcertar, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPesquisaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        proCod = campoPesquisa.getText();
        proNome = campoPesquisa.getText();
        try {
            pesquisa();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botaoAcertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAcertarActionPerformed
        try {
            acertar();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botaoAcertarActionPerformed

    private void tabelaEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaEstoqueKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
           int linha = tabelaEstoque.getSelectedRow();
           
           int quatM = Integer.parseInt( (String) tabelaEstoque.getValueAt(linha, 3));
           int quatA = Integer.parseInt( (String) tabelaEstoque.getValueAt(linha, 2));
           int quatN = quatM + quatA;
           String quantidade = Integer.toString(quatN);
           tabelaEstoque.setValueAt(quantidade, linha, 4);
           
            tabelaEstoque.setRowSelectionInterval(linha, linha); //mudar para a linha abaixo
            tabelaEstoque.setColumnSelectionInterval(3, 3);     //mudar para a coluna de quantidade a mais
            tabelaEstoque.setSurrendersFocusOnKeystroke(true);
            
            //botaoAcertar.requestFocus(); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaEstoqueKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botaoAcertar;
    private javax.swing.JTextField campoPesquisa;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaEstoque;
    private javax.swing.JComboBox<String> tipoPesquisa;
    // End of variables declaration//GEN-END:variables

    public void pesquisa() throws SQLException {

        while (tabelaEstoque.getModel().getRowCount() > 0) {
            ((DefaultTableModel) tabelaEstoque.getModel()).removeRow(0);
        }

        conexao conexao = new conexao();
        conexao.getConexao();
        String selectSQL = "";
        int tipo = tipoPesquisa.getSelectedIndex();
        if (tipo == 0) {
            selectSQL = "SELECT * FROM PRODUTOS P WHERE P.PRO_NOME like '%" + proNome + "%'";
        }
        if (tipo == 1) {
            if (proCod.equals("")) {
                proCod = "0";
            }
            selectSQL = "SELECT * FROM PRODUTOS P WHERE P.PRO_ID = " + proCod;
        }

        Statement pstmtCon;
        pstmtCon = conexao.getConexao().createStatement();

        ResultSet rs = pstmtCon.executeQuery(selectSQL);

        while (rs.next()) {

            DefaultTableModel tabela = (DefaultTableModel) tabelaEstoque.getModel();

            tabela.addRow(new String[]{rs.getString("pro_id"), rs.getString("pro_nome"),
                rs.getString("pro_quantidade"), "", rs.getString("pro_quantidade")});

        }

    }

    public void acertar() throws SQLException {

        int nlinhas = tabelaEstoque.getRowCount();
        int linha = 0;
        while (linha < nlinhas) {

            int cod = Integer.parseInt((String) tabelaEstoque.getValueAt(linha, 0));
            int quant = Integer.parseInt((String) tabelaEstoque.getValueAt(linha, 4));

            conexao conexao = new conexao();
            conexao.getConexao();
            String selectSQL = "UPDATE PRODUTOS SET PRO_QUANTIDADE = " + quant + " WHERE PRO_ID = " + cod;

            System.out.println(selectSQL);
            Statement pstmtCon;
            pstmtCon = conexao.getConexao().createStatement();

            int rs = pstmtCon.executeUpdate(selectSQL);

            linha++;

            pstmtCon.close();
        }

    }

    public void acertar2() throws SQLException {
        int quant = 21, cod = 1;

        String selectSQL = "UPDATE PRODUTOS A SET A.PRO_QUANTIDADE = " + quant + " WHERE A.PRO_ID = " + cod;
        System.out.println(selectSQL);
    }
}
