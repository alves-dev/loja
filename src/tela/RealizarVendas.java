/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import classes.vendas;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.*;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import persistencia.IncluirEditarDAO;
import persistencia.conexao;

/**
 *
 * @author Igor
 */
public class RealizarVendas extends javax.swing.JFrame {

    vendas vendas = new vendas();
    IncluirEditarDAO ReVe;

    /**
     * Creates new form RealizarVendas
     */
    public RealizarVendas() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        
        Date dataSistema = new Date();
        vendaData.setDate(dataSistema);

    }

    //variaveis para o metodo valorTotalVenda();
    int linha = 0, coluna = 4; //usados no metodo de valor total venda
    float valorVenda;
    int codpes; //cod da pessoa selecionada na tabela busca pessoa
    int nVenda; //numero retornado pelo inset da tabela vendas

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pesquisaPessoa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        nomePessoa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaPessoas = new javax.swing.JTable();
        nomeProduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pesquisaProdutos = new javax.swing.JButton();
        vendaData = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProodutosSelecionados = new javax.swing.JTable();
        pessoasSelecionada = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        produtoSelecionado = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        vendaQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        vendaTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        vendaPreÃ§o = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        adicionarProduto = new javax.swing.JButton();
        totalDaVenda = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        botaoFinalizar = new javax.swing.JButton();
        codVenda = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");

        pesquisaPessoa.setText("Pesquisar");
        pesquisaPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaPessoaActionPerformed(evt);
            }
        });

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Nome Produto", "Valor", "Quant"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.getTableHeader().setReorderingAllowed(false);
        tabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaProdutos);
        if (tabelaProdutos.getColumnModel().getColumnCount() > 0) {
            tabelaProdutos.getColumnModel().getColumn(0).setMinWidth(35);
            tabelaProdutos.getColumnModel().getColumn(0).setPreferredWidth(35);
            tabelaProdutos.getColumnModel().getColumn(0).setMaxWidth(35);
            tabelaProdutos.getColumnModel().getColumn(2).setMinWidth(70);
            tabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(70);
            tabelaProdutos.getColumnModel().getColumn(2).setMaxWidth(70);
            tabelaProdutos.getColumnModel().getColumn(3).setMinWidth(70);
            tabelaProdutos.getColumnModel().getColumn(3).setPreferredWidth(70);
            tabelaProdutos.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        nomePessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomePessoaActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome Pessoa a pesquisar:");

        tabelaPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Nome Pessoas", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPessoas.getTableHeader().setReorderingAllowed(false);
        tabelaPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPessoasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaPessoas);
        if (tabelaPessoas.getColumnModel().getColumnCount() > 0) {
            tabelaPessoas.getColumnModel().getColumn(0).setMinWidth(35);
            tabelaPessoas.getColumnModel().getColumn(0).setPreferredWidth(35);
            tabelaPessoas.getColumnModel().getColumn(0).setMaxWidth(35);
            tabelaPessoas.getColumnModel().getColumn(2).setMinWidth(70);
            tabelaPessoas.getColumnModel().getColumn(2).setPreferredWidth(70);
            tabelaPessoas.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        jLabel2.setText("Nome Produto a pesquisar:");

        pesquisaProdutos.setText("Pesquisar");
        pesquisaProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaProdutosActionPerformed(evt);
            }
        });

        vendaData.setEnabled(false);

        tabelaProodutosSelecionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Nome", "V.Unitario", "Qtidade", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaProodutosSelecionados);
        if (tabelaProodutosSelecionados.getColumnModel().getColumnCount() > 0) {
            tabelaProodutosSelecionados.getColumnModel().getColumn(0).setMinWidth(35);
            tabelaProodutosSelecionados.getColumnModel().getColumn(0).setPreferredWidth(35);
            tabelaProodutosSelecionados.getColumnModel().getColumn(0).setMaxWidth(35);
            tabelaProodutosSelecionados.getColumnModel().getColumn(2).setMinWidth(65);
            tabelaProodutosSelecionados.getColumnModel().getColumn(2).setPreferredWidth(65);
            tabelaProodutosSelecionados.getColumnModel().getColumn(2).setMaxWidth(65);
            tabelaProodutosSelecionados.getColumnModel().getColumn(3).setMinWidth(40);
            tabelaProodutosSelecionados.getColumnModel().getColumn(3).setPreferredWidth(40);
            tabelaProodutosSelecionados.getColumnModel().getColumn(3).setMaxWidth(40);
            tabelaProodutosSelecionados.getColumnModel().getColumn(4).setMinWidth(60);
            tabelaProodutosSelecionados.getColumnModel().getColumn(4).setPreferredWidth(60);
            tabelaProodutosSelecionados.getColumnModel().getColumn(4).setMaxWidth(60);
        }

        pessoasSelecionada.setEnabled(false);
        pessoasSelecionada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pessoasSelecionadaActionPerformed(evt);
            }
        });

        jLabel3.setText("Pessoa Selecionada para a VENDA:");

        produtoSelecionado.setEnabled(false);
        produtoSelecionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produtoSelecionadoActionPerformed(evt);
            }
        });

        jLabel4.setText("Produto selecionado Atualmente:");

        vendaQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaQuantidadeActionPerformed(evt);
            }
        });
        vendaQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vendaQuantidadeKeyPressed(evt);
            }
        });

        jLabel5.setText("Quantidade:");

        vendaTotal.setEnabled(false);
        vendaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaTotalActionPerformed(evt);
            }
        });

        jLabel6.setText("Total:");

        vendaPreÃ§o.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaPreÃ§oActionPerformed(evt);
            }
        });
        vendaPreÃ§o.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vendaPreÃ§oKeyPressed(evt);
            }
        });

        jLabel7.setText("PreÃ§o:");

        adicionarProduto.setText("Adcionar");
        adicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarProdutoActionPerformed(evt);
            }
        });
        adicionarProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                adicionarProdutoKeyPressed(evt);
            }
        });

        totalDaVenda.setEnabled(false);

        jLabel8.setText("Total Venda:");

        botaoFinalizar.setText("Finalizar");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });

        codVenda.setEnabled(false);

        jLabel9.setText("NÃºmero da venda:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(produtoSelecionado)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(vendaPreÃ§o, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vendaQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(vendaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(adicionarProduto))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pesquisaPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nomePessoa)
                                .addComponent(nomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(pesquisaProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(46, 46, 46)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(27, 274, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(botaoFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pessoasSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(codVenda, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(vendaData, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalDaVenda)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(197, 419, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(nomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pesquisaPessoa))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pessoasSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vendaData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(nomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pesquisaProdutos))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(produtoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vendaPreÃ§o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vendaQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(vendaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(adicionarProduto)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(botaoFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalDaVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisaPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaPessoaActionPerformed
        //limpar tabela --http://andersonneto.blogspot.com.br/2015/05/tutorial-remover-todas-as-linhas-de-um.html

        String nome = nomePessoa.getText();
        try {
            consultaPessoasVendas(nome);
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(RealizarVendas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pesquisaPessoaActionPerformed

    private void pesquisaProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaProdutosActionPerformed
        String nome = nomeProduto.getText();
        try {
            consultaProdutosVendas(nome);
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(RealizarVendas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pesquisaProdutosActionPerformed

    private void nomePessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomePessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomePessoaActionPerformed

    private void pessoasSelecionadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pessoasSelecionadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pessoasSelecionadaActionPerformed

    private void produtoSelecionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produtoSelecionadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_produtoSelecionadoActionPerformed

    private void adicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarProdutoActionPerformed
        adicionaProdutoGrade();
        // TODO add your handling code here:
    }//GEN-LAST:event_adicionarProdutoActionPerformed

    private void vendaTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendaTotalActionPerformed

    private void vendaQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendaQuantidadeActionPerformed

    private void tabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosMouseClicked
        //getValuesAT = pegar valor da linha selecionada; passar parametros linha e coluna (atenÃ§Ã£o na coluna)
        int linhaSelecionada = tabelaProdutos.getSelectedRow();

        produtoSelecionado.setText((String) tabelaProdutos.getValueAt(linhaSelecionada, 1));
        vendaPreÃ§o.setText((String) tabelaProdutos.getValueAt(linhaSelecionada, 2));

        tabelaPessoas.getSelectionModel().clearSelection();
        vendaQuantidade.setText("1");
        vendaPreÃ§o.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaProdutosMouseClicked

    private void tabelaPessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPessoasMouseClicked
        //getValuesAT = pegar valor da linha selecionada; passar parametros linha e coluna (atenÃ§Ã£o na coluna)
        int linhaSelecionada = tabelaPessoas.getSelectedRow();

        pessoasSelecionada.setText((String) tabelaPessoas.getValueAt(linhaSelecionada, 1));
        String codcodpes = (String) tabelaPessoas.getValueAt(linhaSelecionada, 0);
        codpes = Integer.parseInt(codcodpes);

        pesquisaProdutos.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaPessoasMouseClicked

    private void vendaPreÃ§oKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vendaPreÃ§oKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            vendaQuantidade.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_vendaPreÃ§oKeyPressed

    private void vendaQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vendaQuantidadeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            vendaTotal.requestFocus();

            float p = Float.parseFloat(vendaPreÃ§o.getText());
            int q = Integer.parseInt(vendaQuantidade.getText());
            float pq = p * q;
            String t = Float.toString(pq);
            vendaTotal.setText(t);
            adicionarProduto.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_vendaQuantidadeKeyPressed

    private void adicionarProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adicionarProdutoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            adicionaProdutoGrade();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_adicionarProdutoKeyPressed

    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed

        int cod;

        preencher_Vendas();
        
        try {
            ReVe = new IncluirEditarDAO();
            cod = ReVe.IncluirVendas(vendas);
            codVenda.setText(String.valueOf(cod));

            nVenda = cod; // passar nVendas para o metodo preencher_Incluir_ItemsVendas
            preencher_Incluir_ItemsVendas();
            decremmentar();

            JOptionPane.showMessageDialog(this, "Salvo com sucesso! nÃºmero da venda: " + cod);
            finalizarVenda();

        } catch (SQLException | HeadlessException error) {
            JOptionPane.showMessageDialog(this, "OperaÃ§Ã£o nÃ£o realizada" + error.getMessage());
        }

        pessoasSelecionada.setText("");
        totalDaVenda.setText("");
        linha = 0;
        valorVenda = 0;
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    private void vendaPreÃ§oActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaPreÃ§oActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendaPreÃ§oActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RealizarVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarProduto;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JTextField codVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField nomePessoa;
    private javax.swing.JTextField nomeProduto;
    private javax.swing.JButton pesquisaPessoa;
    private javax.swing.JButton pesquisaProdutos;
    private javax.swing.JTextField pessoasSelecionada;
    private javax.swing.JTextField produtoSelecionado;
    private javax.swing.JTable tabelaPessoas;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTable tabelaProodutosSelecionados;
    private javax.swing.JTextField totalDaVenda;
    private com.toedter.calendar.JDateChooser vendaData;
    private javax.swing.JTextField vendaPreÃ§o;
    private javax.swing.JTextField vendaQuantidade;
    private javax.swing.JTextField vendaTotal;
    // End of variables declaration//GEN-END:variables

    public void consultaPessoasVendas(String nome) throws SQLException {
        //limpar tabela --http://andersonneto.blogspot.com.br/2015/05/tutorial-remover-todas-as-linhas-de-um.html
        //as duas linhas abaixo serve para limpar a tabela
        while (tabelaPessoas.getModel().getRowCount() > 0) {
            ((DefaultTableModel) tabelaPessoas.getModel()).removeRow(0);
        }

        conexao conexao = new conexao();
        conexao.getConexao();
        String selectSQL = "SELECT * FROM PESSOAS A WHERE A.PES_NOME LIKE '%" + nome + "%'";

        Statement pstmtCon;
        pstmtCon = conexao.getConexao().createStatement();

        ResultSet rs = pstmtCon.executeQuery(selectSQL);

        while (rs.next()) {

            String resultStatus = null;
            int status = rs.getInt("pes_status");
            if (status == 1) {
                resultStatus = "Ativo";
            }
            if (status == 0) {
                resultStatus = "Inativo";
            }
            if (status < 0 || status > 1) {
                resultStatus = "NÃ£o definido";
            }

            DefaultTableModel tabelaPES = (DefaultTableModel) tabelaPessoas.getModel();
            tabelaPES.addRow(new String[]{rs.getString("pes_id"), rs.getString("pes_nome"), resultStatus});

            /*
            LINKS PARA VIDIOS PREENXER TABELA:
            https://www.youtube.com/watch?v=WJ3700ZIxBc --este aqui Ã© bom
            https://www.youtube.com/watch?v=S2T4OEklvOg
            https://www.youtube.com/watch?v=cS9CyHII_54 --este aq   ui Ã© sucesso!
             */
        }

        rs.close();
        pstmtCon.close();

    }

    public void consultaProdutosVendas(String nome) throws SQLException {
        //limpar tabela --http://andersonneto.blogspot.com.br/2015/05/tutorial-remover-todas-as-linhas-de-um.html
        //as duas linhas abaixo serve para limpar a tabela
        while (tabelaProdutos.getModel().getRowCount() > 0) {
            ((DefaultTableModel) tabelaProdutos.getModel()).removeRow(0);
        }

        conexao conexao = new conexao();
        conexao.getConexao();
        String selectSQL = "SELECT * FROM PRODUTOS A WHERE A.PRO_NOME LIKE '%" + nome + "%'";

        Statement pstmtCon;
        pstmtCon = conexao.getConexao().createStatement();

        ResultSet rs = pstmtCon.executeQuery(selectSQL);

        while (rs.next()) {

            DefaultTableModel tabelaPRO = (DefaultTableModel) tabelaProdutos.getModel();
            tabelaPRO.addRow(new String[]{rs.getString("pro_id"), rs.getString("pro_nome"),
                rs.getString("pro_valor"), rs.getString("pro_quantidade")});

        }

        rs.close();
        pstmtCon.close();

    }

    public void adicionaProdutoGrade() {
        //verificaÃ§Ã£o se campo diferen de vazio

        String nullq = vendaQuantidade.getText();
        String nullp = vendaPreÃ§o.getText();
        String nullt = vendaTotal.getText();

        if (!"".equals(nullq) && !"".equals(nullp) && !"".equals(nullt)) {

            DefaultTableModel tabelaProSelec = (DefaultTableModel) tabelaProodutosSelecionados.getModel();
            int linhaSelecionada = tabelaProdutos.getSelectedRow();

            String codpro = (String) tabelaProdutos.getValueAt(linhaSelecionada, 0);

            tabelaProSelec.addRow(new String[]{codpro, produtoSelecionado.getText(), vendaPreÃ§o.getText(),
                vendaQuantidade.getText(), vendaTotal.getText()});

            produtoSelecionado.setText("");
            vendaPreÃ§o.setText("");
            vendaQuantidade.setText("");
            vendaTotal.setText("");
            tabelaProdutos.getSelectionModel().clearSelection();
            valorTotalVenda();
        }
    }

    public void valorTotalVenda() {
        //variaveis no inicio da classe

        String valColuna;
        valColuna = (String) tabelaProodutosSelecionados.getValueAt(linha, coluna);

        valorVenda = valorVenda + Float.parseFloat(valColuna);
        String resultado = Float.toString(valorVenda);
        totalDaVenda.setText(resultado);
        linha++;
    }

    public void preencher_Vendas() {
        float total = Float.parseFloat(totalDaVenda.getText());

        vendas.setVen_pes_id(codpes);
        vendas.setVen_pes_nome(pessoasSelecionada.getText().trim());
        vendas.setVen_valor(total);
        vendas.setVen_data(vendaData.getDate());
    }

    public void preencher_Incluir_ItemsVendas() {
        int cod2;
        //ler produtos na grade
        int nLinhas = tabelaProodutosSelecionados.getModel().getRowCount();
        int linha = 0;

        while (linha < nLinhas) {
            int proID = Integer.parseInt((String) tabelaProodutosSelecionados.getValueAt(linha, 0));
            String proNOME = (String) tabelaProodutosSelecionados.getValueAt(linha, 1);
            float itemVALOR = Float.parseFloat((String) tabelaProodutosSelecionados.getValueAt(linha, 2));
            int quantidade = Integer.parseInt((String) tabelaProodutosSelecionados.getValueAt(linha, 3));
            float totalVALOR = Float.parseFloat((String) tabelaProodutosSelecionados.getValueAt(linha, 4));

            vendas.setIv_ven_id(nVenda);
            vendas.setIv_pro_id(proID);
            vendas.setIv_pro_nome(proNOME);
            vendas.setIv_valor(itemVALOR);
            vendas.setIv_quantidade(quantidade);
            vendas.setIv_totaValor(totalVALOR);
            vendas.setIv_data(vendaData.getDate());
            linha++;

            try {
                cod2 = ReVe.IncluirItemsVendas(vendas);
            } catch (SQLException ex) {
                Logger.getLogger(RealizarVendas.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void finalizarVenda() {
        while (tabelaProodutosSelecionados.getModel().getRowCount() > 0) {
            ((DefaultTableModel) tabelaProodutosSelecionados.getModel()).removeRow(0);
        }
    }

    public void decremmentar() throws SQLException {

        int nlinhas = tabelaProodutosSelecionados.getRowCount();
        int linha = 0;
        while (linha < nlinhas) {

            int cod = Integer.parseInt((String) tabelaProodutosSelecionados.getValueAt(linha, 0));
            int quant = Integer.parseInt((String) tabelaProodutosSelecionados.getValueAt(linha, 3));
                        
            conexao conexao = new conexao();
            conexao.getConexao();
            String selectSQL = "UPDATE PRODUTOS SET PRO_QUANTIDADE = ( PRO_QUANTIDADE - " + quant + ") WHERE PRO_ID = " + cod;

            System.out.println(selectSQL);
            Statement pstmtCon;
            pstmtCon = conexao.getConexao().createStatement();

            int rs = pstmtCon.executeUpdate(selectSQL);

            linha++;

            pstmtCon.close();
        }

    }
}
